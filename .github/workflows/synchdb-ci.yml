name: SynchDB CI
on:
  workflow_dispatch:
  push:
    branches: [ main, synchdb-devel, github-action-test]
  pull_request:
    branches: [ main, synchdb-devel github-action-test]
jobs:
  params:
    runs-on: ubuntu-22.04
    name: Initialize parameters
    outputs:
      pg16_version: '{ "major": "16", "full": "16.8" }'
      pg17_version: '{ "major": "17", "full": "17.4" }'
    steps:
      - name: set up parameters
        run: echo 'noop'
  build:
    needs: params
    name: Build for PG$${{ fromJson(matrix.pg_version).major }}
    strategy:
      matrix:
        pg_version:
          - ${{ needs.params.outputs.pg16_version }}
          - ${{ needs.params.outputs.pg17_version }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 22
      uses: actions/setup-java@v2
      with:
        java-version: '22'
        distribution: 'temurin'
        architecture: x64
        check-latest: true
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.8
    - name: Install pg
      run: |
        sudo apt-get update
        echo -ne "\n" | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
        sudo apt-get install -y postgresql-client-${{ fromJson(matrix.pg_version).major }}
        sudo apt-get install -y postgresql-${{ fromJson(matrix.pg_version).major }}
        sudo apt-get install -y postgresql-server-dev-${{ fromJson(matrix.pg_version).major }}
    - name: Expose $PG_MAJOR to Github Env
      run: echo "PG_MAJOR=$(echo '${{ matrix.pg_version }}' | jq -r .major)" >> $GITHUB_ENV
      shell: bash
    - name: Build
      run: "./ci/build-synchdb.sh"
      shell: bash
    - uses: actions/upload-artifact@v4.6.0
      with:
        name: synchdb-${{ env.PG_MAJOR }}
        path: |-
          ./synchdb-install.tar.gz
  test-synchdb:
    name: PG${{ fromJson(matrix.pg_version).major }} - MySQL Tests
    strategy:
      matrix:
        pg_version:
          - ${{ needs.params.outputs.pg16_version }}
          - ${{ needs.params.outputs.pg17_version }}
    runs-on: ubuntu-22.04
    needs:
    - params
    - build
    steps:
    - name: Test synchdb MySQL
      run: |
        echo "testing done... check install"
      shell: bash
