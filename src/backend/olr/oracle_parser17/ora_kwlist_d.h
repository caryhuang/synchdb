/*-------------------------------------------------------------------------
 *
 * ora_kwlist_d.h
 *    List of keywords represented as a ScanKeywordList.
 *
 * Portions Copyright (c) 1996-2024, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/tools/gen_keywordlist.pl
 *
 *-------------------------------------------------------------------------
 */

#ifndef ORA_KWLIST_D_H
#define ORA_KWLIST_D_H

#include "common/kwlookup.h"

static const char OraScanKeywords_kw_string[] =
	"abort\0"
	"absent\0"
	"absolute\0"
	"access\0"
	"accessible\0"
	"action\0"
	"add\0"
	"admin\0"
	"after\0"
	"aggregate\0"
	"all\0"
	"also\0"
	"alter\0"
	"always\0"
	"analyse\0"
	"analyze\0"
	"and\0"
	"any\0"
	"array\0"
	"as\0"
	"asc\0"
	"asensitive\0"
	"assertion\0"
	"assignment\0"
	"asymmetric\0"
	"at\0"
	"atomic\0"
	"attach\0"
	"attribute\0"
	"authid\0"
	"authorization\0"
	"backward\0"
	"before\0"
	"begin\0"
	"between\0"
	"bigint\0"
	"binary\0"
	"binary_double\0"
	"binary_double_infinity\0"
	"binary_double_nan\0"
	"binary_float\0"
	"binary_float_infinity\0"
	"binary_float_nan\0"
	"bit\0"
	"body\0"
	"boolean\0"
	"both\0"
	"breadth\0"
	"by\0"
	"byte\0"
	"cache\0"
	"call\0"
	"called\0"
	"cascade\0"
	"cascaded\0"
	"case\0"
	"cast\0"
	"catalog\0"
	"chain\0"
	"char\0"
	"character\0"
	"characteristics\0"
	"check\0"
	"checkpoint\0"
	"class\0"
	"close\0"
	"cluster\0"
	"coalesce\0"
	"collate\0"
	"collation\0"
	"column\0"
	"columns\0"
	"comment\0"
	"comments\0"
	"commit\0"
	"committed\0"
	"compile\0"
	"compression\0"
	"concurrently\0"
	"conditional\0"
	"configuration\0"
	"conflict\0"
	"connection\0"
	"constraint\0"
	"constraints\0"
	"content\0"
	"continue\0"
	"conversion\0"
	"copy\0"
	"cost\0"
	"create\0"
	"cross\0"
	"csv\0"
	"cube\0"
	"current\0"
	"current_catalog\0"
	"current_date\0"
	"current_role\0"
	"current_schema\0"
	"current_time\0"
	"current_timestamp\0"
	"current_user\0"
	"cursor\0"
	"cycle\0"
	"data\0"
	"database\0"
	"date\0"
	"day\0"
	"deallocate\0"
	"debug\0"
	"dec\0"
	"decimal\0"
	"declare\0"
	"decode\0"
	"default\0"
	"defaults\0"
	"deferrable\0"
	"deferred\0"
	"definer\0"
	"delete\0"
	"delimiter\0"
	"delimiters\0"
	"depends\0"
	"depth\0"
	"desc\0"
	"detach\0"
	"deterministic\0"
	"dictionary\0"
	"disable\0"
	"discard\0"
	"distinct\0"
	"do\0"
	"document\0"
	"domain\0"
	"double\0"
	"drop\0"
	"each\0"
	"editionable\0"
	"else\0"
	"empty\0"
	"enable\0"
	"encoding\0"
	"encrypted\0"
	"end\0"
	"enum\0"
	"error\0"
	"escape\0"
	"event\0"
	"except\0"
	"exclude\0"
	"excluding\0"
	"exclusive\0"
	"exec\0"
	"execute\0"
	"exists\0"
	"explain\0"
	"expression\0"
	"extend\0"
	"extension\0"
	"external\0"
	"false\0"
	"family\0"
	"fetch\0"
	"filter\0"
	"finalize\0"
	"first\0"
	"float\0"
	"following\0"
	"for\0"
	"force\0"
	"foreign\0"
	"format\0"
	"forward\0"
	"freeze\0"
	"from\0"
	"full\0"
	"function\0"
	"functions\0"
	"generated\0"
	"global\0"
	"grant\0"
	"granted\0"
	"greatest\0"
	"group\0"
	"grouping\0"
	"groups\0"
	"handler\0"
	"hash\0"
	"having\0"
	"header\0"
	"hold\0"
	"hour\0"
	"identity\0"
	"if\0"
	"ilike\0"
	"immediate\0"
	"immutable\0"
	"implicit\0"
	"import\0"
	"in\0"
	"include\0"
	"including\0"
	"increment\0"
	"indent\0"
	"index\0"
	"indexes\0"
	"infinite\0"
	"inherit\0"
	"inherits\0"
	"initially\0"
	"inline\0"
	"inner\0"
	"inout\0"
	"input\0"
	"insensitive\0"
	"insert\0"
	"instead\0"
	"int\0"
	"integer\0"
	"intersect\0"
	"interval\0"
	"into\0"
	"invisible\0"
	"invoker\0"
	"is\0"
	"isnull\0"
	"isolation\0"
	"ivysql\0"
	"join\0"
	"json\0"
	"json_array\0"
	"json_arrayagg\0"
	"json_exists\0"
	"json_object\0"
	"json_objectagg\0"
	"json_query\0"
	"json_scalar\0"
	"json_serialize\0"
	"json_table\0"
	"json_value\0"
	"keep\0"
	"key\0"
	"keys\0"
	"label\0"
	"language\0"
	"large\0"
	"last\0"
	"lateral\0"
	"leading\0"
	"leakproof\0"
	"least\0"
	"left\0"
	"level\0"
	"like\0"
	"limit\0"
	"listen\0"
	"load\0"
	"local\0"
	"localtime\0"
	"localtimestamp\0"
	"location\0"
	"lock\0"
	"locked\0"
	"logged\0"
	"long\0"
	"loop\0"
	"mapping\0"
	"match\0"
	"matched\0"
	"materialized\0"
	"maxvalue\0"
	"merge\0"
	"merge_action\0"
	"metadata\0"
	"method\0"
	"minute\0"
	"minvalue\0"
	"mode\0"
	"modify\0"
	"month\0"
	"move\0"
	"name\0"
	"names\0"
	"nan\0"
	"national\0"
	"natural\0"
	"nchar\0"
	"nested\0"
	"new\0"
	"next\0"
	"nfc\0"
	"nfd\0"
	"nfkc\0"
	"nfkd\0"
	"no\0"
	"nocache\0"
	"nocopy\0"
	"nocycle\0"
	"noextend\0"
	"nokeep\0"
	"nomaxvalue\0"
	"nominvalue\0"
	"none\0"
	"noneditionable\0"
	"noorder\0"
	"normalize\0"
	"normalized\0"
	"noscale\0"
	"noshard\0"
	"not\0"
	"nothing\0"
	"notify\0"
	"notnull\0"
	"nowait\0"
	"null\0"
	"nullif\0"
	"nulls\0"
	"number\0"
	"numeric\0"
	"nvl\0"
	"nvl2\0"
	"object\0"
	"of\0"
	"off\0"
	"offset\0"
	"oids\0"
	"old\0"
	"omit\0"
	"on\0"
	"only\0"
	"operator\0"
	"option\0"
	"options\0"
	"or\0"
	"order\0"
	"ordinality\0"
	"others\0"
	"out\0"
	"outer\0"
	"over\0"
	"overlaps\0"
	"overlay\0"
	"overriding\0"
	"owned\0"
	"owner\0"
	"package\0"
	"packages\0"
	"parallel\0"
	"parallel_enable\0"
	"parameter\0"
	"parser\0"
	"partial\0"
	"partition\0"
	"passing\0"
	"password\0"
	"path\0"
	"pgextract\0"
	"pipelined\0"
	"placing\0"
	"plan\0"
	"plans\0"
	"policy\0"
	"polymorphic\0"
	"position\0"
	"preceding\0"
	"precision\0"
	"prepare\0"
	"prepared\0"
	"preserve\0"
	"primary\0"
	"prior\0"
	"privileges\0"
	"procedural\0"
	"procedure\0"
	"procedures\0"
	"program\0"
	"publication\0"
	"quote\0"
	"quotes\0"
	"range\0"
	"raw\0"
	"read\0"
	"real\0"
	"reassign\0"
	"recheck\0"
	"recursive\0"
	"ref\0"
	"references\0"
	"referencing\0"
	"refresh\0"
	"reindex\0"
	"relative\0"
	"release\0"
	"relies_on\0"
	"rename\0"
	"repeatable\0"
	"replace\0"
	"replica\0"
	"reset\0"
	"restart\0"
	"restrict\0"
	"result_cache\0"
	"return\0"
	"returning\0"
	"returns\0"
	"reuse\0"
	"revoke\0"
	"right\0"
	"role\0"
	"rollback\0"
	"rollup\0"
	"routine\0"
	"routines\0"
	"row\0"
	"rows\0"
	"rowtype\0"
	"rule\0"
	"savepoint\0"
	"scalar\0"
	"scale\0"
	"schema\0"
	"schemas\0"
	"scroll\0"
	"search\0"
	"second\0"
	"security\0"
	"select\0"
	"sequence\0"
	"sequences\0"
	"serializable\0"
	"server\0"
	"session\0"
	"session_user\0"
	"set\0"
	"setof\0"
	"sets\0"
	"settings\0"
	"shard\0"
	"share\0"
	"sharing\0"
	"show\0"
	"similar\0"
	"simple\0"
	"skip\0"
	"smallint\0"
	"snapshot\0"
	"some\0"
	"source\0"
	"specification\0"
	"sql\0"
	"sql_macro\0"
	"stable\0"
	"standalone\0"
	"start\0"
	"statement\0"
	"statistics\0"
	"stdin\0"
	"stdout\0"
	"storage\0"
	"stored\0"
	"strict\0"
	"string\0"
	"strip\0"
	"subscription\0"
	"substring\0"
	"support\0"
	"symmetric\0"
	"sysdate\0"
	"sysid\0"
	"system\0"
	"system_user\0"
	"systimestamp\0"
	"table\0"
	"tables\0"
	"tablesample\0"
	"tablespace\0"
	"target\0"
	"temp\0"
	"template\0"
	"temporary\0"
	"text\0"
	"then\0"
	"ties\0"
	"time\0"
	"timestamp\0"
	"to\0"
	"trailing\0"
	"transaction\0"
	"transform\0"
	"treat\0"
	"trigger\0"
	"trim\0"
	"true\0"
	"truncate\0"
	"trusted\0"
	"type\0"
	"types\0"
	"uescape\0"
	"unbounded\0"
	"uncommitted\0"
	"unconditional\0"
	"unencrypted\0"
	"union\0"
	"unique\0"
	"unknown\0"
	"unlisten\0"
	"unlogged\0"
	"until\0"
	"update\0"
	"updatexml\0"
	"user\0"
	"userenv\0"
	"using\0"
	"using_nls_comp\0"
	"vacuum\0"
	"valid\0"
	"validate\0"
	"validator\0"
	"value\0"
	"values\0"
	"varchar\0"
	"varchar2\0"
	"variadic\0"
	"varying\0"
	"verbose\0"
	"version\0"
	"view\0"
	"views\0"
	"visible\0"
	"volatile\0"
	"when\0"
	"where\0"
	"whitespace\0"
	"window\0"
	"with\0"
	"within\0"
	"without\0"
	"work\0"
	"wrapper\0"
	"write\0"
	"xml\0"
	"xmlattributes\0"
	"xmlconcat\0"
	"xmlelement\0"
	"xmlexists\0"
	"xmlforest\0"
	"xmlnamespaces\0"
	"xmlparse\0"
	"xmlpi\0"
	"xmlroot\0"
	"xmlserialize\0"
	"xmltable\0"
	"year\0"
	"yes\0"
	"zone";

static const uint16 OraScanKeywords_kw_offsets[] = {
	0,
	6,
	13,
	22,
	29,
	40,
	47,
	51,
	57,
	63,
	73,
	77,
	82,
	88,
	95,
	103,
	111,
	115,
	119,
	125,
	128,
	132,
	143,
	153,
	164,
	175,
	178,
	185,
	192,
	202,
	209,
	223,
	232,
	239,
	245,
	253,
	260,
	267,
	281,
	304,
	322,
	335,
	357,
	374,
	378,
	383,
	391,
	396,
	404,
	407,
	412,
	418,
	423,
	430,
	438,
	447,
	452,
	457,
	465,
	471,
	476,
	486,
	502,
	508,
	519,
	525,
	531,
	539,
	548,
	556,
	566,
	573,
	581,
	589,
	598,
	605,
	615,
	623,
	635,
	648,
	660,
	674,
	683,
	694,
	705,
	717,
	725,
	734,
	745,
	750,
	755,
	762,
	768,
	772,
	777,
	785,
	801,
	814,
	827,
	842,
	855,
	873,
	886,
	893,
	899,
	904,
	913,
	918,
	922,
	933,
	939,
	943,
	951,
	959,
	966,
	974,
	983,
	994,
	1003,
	1011,
	1018,
	1028,
	1039,
	1047,
	1053,
	1058,
	1065,
	1079,
	1090,
	1098,
	1106,
	1115,
	1118,
	1127,
	1134,
	1141,
	1146,
	1151,
	1163,
	1168,
	1174,
	1181,
	1190,
	1200,
	1204,
	1209,
	1215,
	1222,
	1228,
	1235,
	1243,
	1253,
	1263,
	1268,
	1276,
	1283,
	1291,
	1302,
	1309,
	1319,
	1328,
	1334,
	1341,
	1347,
	1354,
	1363,
	1369,
	1375,
	1385,
	1389,
	1395,
	1403,
	1410,
	1418,
	1425,
	1430,
	1435,
	1444,
	1454,
	1464,
	1471,
	1477,
	1485,
	1494,
	1500,
	1509,
	1516,
	1524,
	1529,
	1536,
	1543,
	1548,
	1553,
	1562,
	1565,
	1571,
	1581,
	1591,
	1600,
	1607,
	1610,
	1618,
	1628,
	1638,
	1645,
	1651,
	1659,
	1668,
	1676,
	1685,
	1695,
	1702,
	1708,
	1714,
	1720,
	1732,
	1739,
	1747,
	1751,
	1759,
	1769,
	1778,
	1783,
	1793,
	1801,
	1804,
	1811,
	1821,
	1828,
	1833,
	1838,
	1849,
	1863,
	1875,
	1887,
	1902,
	1913,
	1925,
	1940,
	1951,
	1962,
	1967,
	1971,
	1976,
	1982,
	1991,
	1997,
	2002,
	2010,
	2018,
	2028,
	2034,
	2039,
	2045,
	2050,
	2056,
	2063,
	2068,
	2074,
	2084,
	2099,
	2108,
	2113,
	2120,
	2127,
	2132,
	2137,
	2145,
	2151,
	2159,
	2172,
	2181,
	2187,
	2200,
	2209,
	2216,
	2223,
	2232,
	2237,
	2244,
	2250,
	2255,
	2260,
	2266,
	2270,
	2279,
	2287,
	2293,
	2300,
	2304,
	2309,
	2313,
	2317,
	2322,
	2327,
	2330,
	2338,
	2345,
	2353,
	2362,
	2369,
	2380,
	2391,
	2396,
	2411,
	2419,
	2429,
	2440,
	2448,
	2456,
	2460,
	2468,
	2475,
	2483,
	2490,
	2495,
	2502,
	2508,
	2515,
	2523,
	2527,
	2532,
	2539,
	2542,
	2546,
	2553,
	2558,
	2562,
	2567,
	2570,
	2575,
	2584,
	2591,
	2599,
	2602,
	2608,
	2619,
	2626,
	2630,
	2636,
	2641,
	2650,
	2658,
	2669,
	2675,
	2681,
	2689,
	2698,
	2707,
	2723,
	2733,
	2740,
	2748,
	2758,
	2766,
	2775,
	2780,
	2790,
	2800,
	2808,
	2813,
	2819,
	2826,
	2838,
	2847,
	2857,
	2867,
	2875,
	2884,
	2893,
	2901,
	2907,
	2918,
	2929,
	2939,
	2950,
	2958,
	2970,
	2976,
	2983,
	2989,
	2993,
	2998,
	3003,
	3012,
	3020,
	3030,
	3034,
	3045,
	3057,
	3065,
	3073,
	3082,
	3090,
	3100,
	3107,
	3118,
	3126,
	3134,
	3140,
	3148,
	3157,
	3170,
	3177,
	3187,
	3195,
	3201,
	3208,
	3214,
	3219,
	3228,
	3235,
	3243,
	3252,
	3256,
	3261,
	3269,
	3274,
	3284,
	3291,
	3297,
	3304,
	3312,
	3319,
	3326,
	3333,
	3342,
	3349,
	3358,
	3368,
	3381,
	3388,
	3396,
	3409,
	3413,
	3419,
	3424,
	3433,
	3439,
	3445,
	3453,
	3458,
	3466,
	3473,
	3478,
	3487,
	3496,
	3501,
	3508,
	3522,
	3526,
	3536,
	3543,
	3554,
	3560,
	3570,
	3581,
	3587,
	3594,
	3602,
	3609,
	3616,
	3623,
	3629,
	3642,
	3652,
	3660,
	3670,
	3678,
	3684,
	3691,
	3703,
	3716,
	3722,
	3729,
	3741,
	3752,
	3759,
	3764,
	3773,
	3783,
	3788,
	3793,
	3798,
	3803,
	3813,
	3816,
	3825,
	3837,
	3847,
	3853,
	3861,
	3866,
	3871,
	3880,
	3888,
	3893,
	3899,
	3907,
	3917,
	3929,
	3943,
	3955,
	3961,
	3968,
	3976,
	3985,
	3994,
	4000,
	4007,
	4017,
	4022,
	4030,
	4036,
	4051,
	4058,
	4064,
	4073,
	4083,
	4089,
	4096,
	4104,
	4113,
	4122,
	4130,
	4138,
	4146,
	4151,
	4157,
	4165,
	4174,
	4179,
	4185,
	4196,
	4203,
	4208,
	4215,
	4223,
	4228,
	4236,
	4242,
	4246,
	4260,
	4270,
	4281,
	4291,
	4301,
	4315,
	4324,
	4330,
	4338,
	4351,
	4360,
	4365,
	4369,
};

#define ORASCANKEYWORDS_NUM_KEYWORDS 555

static int
OraScanKeywords_hash_func(const void *key, size_t keylen)
{
	static const int16 h[1111] = {
		32767, 497,   -261,  32767, 62,    209,   339,   469,
		32767, 32767, 12,    655,   472,   1134,  23,    419,
		-514,  0,     299,   -308,  32767, 32767, 32767, 0,
		-352,  283,   0,     32767, -280,  32767, 682,   -202,
		199,   -83,   329,   595,   22,    0,     32767, 32767,
		2,     317,   -606,  32767, 591,   0,     -132,  -502,
		120,   439,   552,   32767, 460,   32767, 32767, 32767,
		-313,  32767, 253,   32767, 32767, 32767, 32767, 32767,
		21,    32767, 165,   -469,  32767, 32767, 139,   -41,
		32767, 32767, 32767, 0,     32767, 32767, 32767, 32767,
		269,   32767, 0,     210,   32767, 82,    369,   -111,
		32767, 0,     32767, 0,     32767, 319,   414,   246,
		226,   -563,  32767, -811,  -46,   32767, 245,   32767,
		189,   32767, 32767, 455,   -114,  176,   32767, 32767,
		207,   32767, 32767, 32767, 32767, 32767, 32767, 32767,
		145,   32767, -591,  -231,  599,   743,   391,   32767,
		32767, 449,   528,   -448,  32767, 31,    32767, 466,
		0,     32767, 203,   0,     528,   32767, 212,   509,
		379,   420,   178,   -5,    32767, 38,    32767, -392,
		32767, 353,   0,     312,   32767, 708,   32767, 270,
		0,     32767, 32767, -61,   337,   175,   11,    -23,
		32767, 32767, 0,     23,    215,   0,     89,    32767,
		-176,  -341,  32767, 32767, 32767, 32767, 391,   32767,
		32767, 32767, -908,  32767, 97,    79,    214,   32767,
		0,     235,   -46,   907,   452,   32767, 1057,  32767,
		306,   0,     -53,   -277,  392,   0,     32767, 318,
		32767, 32767, -29,   -123,  0,     579,   32767, 32767,
		3,     225,   -9,    32767, 334,   32767, 0,     32767,
		0,     292,   -678,  32767, 32767, 500,   0,     32767,
		17,    190,   32767, -88,   762,   49,    32767, 77,
		32767, -146,  32767, 32767, 32767, 674,   47,    354,
		421,   32767, 32767, 362,   71,    -174,  32767, 31,
		32767, 32767, 84,    32767, 430,   32767, 32767, 0,
		-229,  -326,  -702,  168,   190,   32767, 0,     487,
		32767, 32767, 32767, -437,  32767, 78,    -302,  32767,
		32767, -249,  502,   32767, 32767, 0,     0,     32767,
		32767, 32767, 346,   32767, 92,    302,   837,   0,
		32767, 32767, 0,     32767, 32767, -74,   407,   32767,
		0,     32767, 67,    -243,  -36,   0,     248,   32767,
		32767, 427,   82,    32767, 32767, 32767, 309,   32767,
		0,     471,   32767, 32767, -74,   32767, 32767, 945,
		32767, 32767, 0,     -10,   0,     205,   0,     611,
		93,    32767, 32767, 32767, 32767, 32767, 315,   32767,
		200,   32767, 129,   32767, 32767, 0,     -96,   0,
		540,   299,   32767, 32767, 32767, 32767, 217,   -1209,
		32767, 0,     27,    32767, -1091, 361,   32767, 32767,
		32767, -151,  1479,  733,   -653,  180,   716,   45,
		1032,  32767, 446,   32767, 211,   842,   32767, 509,
		20,    -48,   310,   285,   32767, 0,     32767, 32767,
		272,   349,   32767, 32767, 0,     32767, 32767, 246,
		32767, 32767, -144,  320,   350,   -50,   32767, 71,
		469,   0,     -219,  32767, 504,   -232,  -346,  32767,
		32767, 0,     32767, 0,     32767, 32767, 32767, 545,
		32767, 134,   -238,  0,     -189,  32767, -85,   0,
		32767, 32767, 195,   32767, 224,   554,   32767, 0,
		12,    312,   32767, -250,  0,     32767, 98,    32767,
		1049,  501,   32767, -478,  702,   0,     465,   32767,
		-153,  436,   232,   32767, 365,   556,   32767, 32,
		230,   0,     32767, 335,   32767, 0,     32767, 32767,
		-86,   32767, 701,   32767, 362,   236,   32767, 0,
		0,     213,   279,   -218,  32767, 32767, 0,     32767,
		274,   32767, 32767, 366,   396,   32767, 32767, 0,
		415,   -128,  -107,  0,     32767, 32767, 32767, -38,
		32767, -852,  200,   400,   588,   32767, 537,   32767,
		41,    32767, 32767, 482,   32767, 0,     32767, 114,
		0,     228,   32767, 32767, -110,  -204,  170,   -326,
		252,   202,   -204,  32767, -116,  366,   0,     32767,
		161,   32767, -295,  0,     770,   687,   645,   32767,
		0,     -494,  857,   32767, -73,   0,     -749,  32767,
		672,   0,     176,   32767, 32767, 142,   32767, 233,
		0,     32767, 166,   179,   -828,  326,   32767, 32767,
		-833,  -135,  32767, 379,   549,   178,   32767, 0,
		-1052, 80,    32767, 32767, 22,    0,     32767, 32767,
		32767, 32767, -215,  547,   32767, 32767, 32767, -1076,
		-283,  32767, 32767, 32767, 32767, 32767, -190,  -312,
		576,   32767, 352,   -34,   32767, 32767, 197,   100,
		-174,  32767, 84,    427,   32767, 107,   262,   32767,
		0,     32767, 32767, -64,   32767, 32767, 200,   0,
		-141,  32767, 32767, 599,   0,     32767, 32767, 32767,
		32767, 115,   -690,  936,   32767, 13,    312,   32767,
		210,   385,   32767, 32767, 199,   -615,  -101,  -176,
		32767, 30,    366,   32767, -331,  32767, 448,   32767,
		192,   76,    0,     32767, 32767, 32767, 32767, 32767,
		505,   -236,  672,   777,   237,   32767, -220,  32767,
		-300,  844,   218,   476,   -269,  32767, 254,   0,
		698,   32767, -331,  32767, 32767, 32767, 156,   32767,
		112,   -325,  32767, 32767, -330,  345,   97,    32767,
		8,     241,   116,   0,     100,   32767, -373,  149,
		32767, 0,     32767, 32767, 32767, 32767, 667,   459,
		32767, -183,  38,    0,     32767, 1371,  913,   32767,
		32767, 260,   42,    182,   201,   32767, 76,    32767,
		390,   32767, 229,   20,    513,   275,   0,     453,
		282,   0,     32767, 32767, -604,  409,   218,   440,
		32767, 548,   32767, 0,     32767, -596,  32767, -326,
		241,   838,   1027,  0,     0,     32767, 32767, -149,
		-194,  -38,   282,   289,   0,     298,   0,     475,
		114,   32767, 32767, 32767, 0,     745,   0,     32767,
		110,   0,     413,   284,   -512,  -375,  32767, 680,
		988,   -156,  32767, -382,  285,   32767, 32767, 32767,
		32767, 32767, 283,   46,    -315,  32767, 451,   0,
		32767, 32767, 32767, 403,   0,     32767, 32767, 32767,
		32767, -323,  -621,  32767, 0,     -178,  -82,   32767,
		524,   106,   0,     0,     0,     32767, 32767, 434,
		127,   32767, -566,  32767, 32767, 32767, 32767, 32767,
		0,     0,     32767, 0,     -365,  32767, 489,   32767,
		195,   32767, 32767, -283,  32767, 1438,  620,   32767,
		32767, 32767, 32767, 514,   32767, 0,     351,   32767,
		32767, 32767, 32767, 32767, 938,   37,    337,   26,
		0,     48,    333,   32767, 363,   32767, 610,   -626,
		0,     32767, 757,   32767, 0,     32767, 196,   32767,
		32767, -693,  32767, 332,   0,     -959,  188,   633,
		32767, 307,   687,   101,   43,    0,     -1093, 32767,
		0,     32767, 771,   0,     -333,  59,    763,   1224,
		115,   32767, 32767, 383,   -36,   -1,    32767, 0,
		32767, 32767, 0,     0,     -722,  -644,  32767, -93,
		0,     0,     603,   312,   360,   0,     -122,  32767,
		296,   272,   281,   32767, 0,     0,     -377,  32767,
		-108,  0,     48,    32767, 85,    163,   32767, 32767,
		542,   380,   -197,  1259,  32767, 192,   32767, 56,
		1393,  -349,  0,     0,     0,     -614,  32767, 32767,
		-1151, 0,     551,   486,   32767, -1117, 330,   32767,
		0,     -873,  32767, 819,   153,   32767, 632,   32767,
		0,     -368,  0,     32767, 327,   216,   32767, 183,
		32767, -108,  32767, 1349,  136,   47,    -26,   32767,
		230,   32767, 107,   -543,  355,   32767, 509,   913,
		167,   551,   32767, -78,   32767, 0,     320,   32767,
		292,   1345,  32767, 32767, 93,    32767, -216,  354,
		-177,  32767, 32767, 461,   1142,  32767, 220,   594,
		32767, 187,   364,   717,   305,   0,     32767, 32767,
		165,   32767, 32767, 1249,  256,   -231,  32767, 32767,
		32767, 0,     32767, 0,     267,   239,   0,     287,
		91,    32767, 0,     54,    0,     32767, 0,     32767,
		32767, 506,   32767, 121,   785,   -276,  32767, 984,
		32767, 32767, 32767, 0,     398,   32767, 394,   32767,
		32767, 32767, -128,  32767, -329,  32767, 0,     32767,
		819,   32767, 468,   -652,  288,   219,   32767, 395,
		-125,  536,   32767, 32767, 212,   -334,  304,   32767,
		32767, 32767, 342,   32767, 143,   -311,  449,   32767,
		471,   164,   1545,  32767, 1310,  0,     32767
	};

	const unsigned char *k = (const unsigned char *) key;
	uint32		a = 0;
	uint32		b = 0;

	while (keylen--)
	{
		unsigned char c = *k++ | 0x20;

		a = a * 257 + c;
		b = b * 31 + c;
	}
	return h[a % 1111] + h[b % 1111];
}

const ScanKeywordList OraScanKeywords = {
	OraScanKeywords_kw_string,
	OraScanKeywords_kw_offsets,
	OraScanKeywords_hash_func,
	ORASCANKEYWORDS_NUM_KEYWORDS,
	22
};

#endif							/* ORA_KWLIST_D_H */
